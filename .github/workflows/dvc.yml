name : CI workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write
    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Install pip
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      # Install dvc
      - name: Install dvc
        run: |
          pip install dvc==3.42.0
          pip install dvc-gdrive==3.0.1 
      # DVC
      - name: Create credentials.json
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |
          echo $GDRIVE_CREDENTIALS_DATA > credentials.json
      # Configure DVC Remote
      - name: Configure DVC Remote
        run: |
          uv run dvc remote add -d gdrive_remote gdrive://1iDBe160x9aKT-j70wDSZ7DIVyh67D5dK
        
      - name: Modify DVC Remote
        run: |
          uv run dvc remote modify --local gdrive_remote gdrive_service_account_json_file_path credentials.json
          uv run dvc remote modify gdrive_remote gdrive_use_service_account true
          uv run dvc remote modify gdrive_remote gdrive_acknowledge_abuse true
      - name: DVC Pull Data
        run: |
          uv run dvc pull -v
      # Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt 
      # Run CNN Inference
      - name: Run tests
        run: |
          mkdir -p plots
          python3 main.py --mode test --data_path ./data/test/ --model_path ./models/cnn_resnet18_freeze_backbone_False.pth
      # Train CNN Model with MLflow
      #- name: Train CNN with MLflow
       # env:
        #  SECRET_HOST: ${{ secrets.SECRET_HOST }}
       #   SECRET_PORT: ${{ secrets.SECRET_PORT }}
        #  SECRET_USERNAME: ${{ secrets.SECRET_USERNAME }}
       #   SECRET_PPK_VALUE: ${{ secrets.SECRET_PPK_VALUE }}
       # run: |
       #   echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI}}"
       #   mkdir -p plots
       #   python3 main.py --mode train --data_path ./data/test/ --model_path ./models/cnn_resnet18_freeze_backbone_False.pth